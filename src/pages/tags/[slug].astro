---
import BlogPostCard from "@/components/BlogPostCard.astro";
import MetaTags from "@/components/MetaTags.astro";
import HomeLayout from "@/layouts/HomeLayout.astro";
import type { InferGetStaticPropsType } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import dayjs from "dayjs";

export async function getStaticPaths() {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? data.isDraft !== true : true;
  });

  const tags: Record<string, CollectionEntry<"blog">[]> = {};

  blogPosts
    .sort((a, b) =>
      dayjs(a.data.publishDate).isBefore(b.data.publishDate) ? 1 : -1
    )
    .forEach((post) => {
      post.data.tags.forEach((tag) => {
        if (tags[tag]) {
          tags[tag].push(post);
        } else {
          tags[tag] = [post];
        }
      });
    });

  return Object.entries(tags).map((entry) => ({
    params: { slug: entry[0] },
    props: { posts: entry[1], tag: entry[0] },
  }));
}
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { posts, tag } = Astro.props;
---

<HomeLayout>
  <MetaTags
    title={`#${tag}`}
    description={`Posts with ${tag} tag`}
    slot="head"
  />

  <main class="container mx-auto my-8 max-w-screen-md px-4 md:px-8">
    <h2 class="text-2xl font-bold">#{tag}</h2>
    <div class="-mx-4 mt-8 grid">
      {posts.map((post) => <BlogPostCard {post} />)}
    </div>
  </main>
</HomeLayout>
